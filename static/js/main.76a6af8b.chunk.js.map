{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortType","NONE","isReversed","reorderOptions","setReorderOptions","goods","setGoods","useEffect","reorderedGoods","visibleGoods","ALPHABET","sort","LENGTH","a","b","length","reverse","getReorderedGoods","className","type","onClick","disabled","prevOptions","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,iEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAA4CC,mBAAyB,CACnEC,SAAUJ,EAASK,KACnBC,YAAY,IAFd,mBAAOC,EAAP,KAAuBC,EAAvB,KAKA,EAA0BL,mBAAmB,IAA7C,mBAAOM,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACR,IAAMC,EA/BV,SAA2BH,EAA3B,GAC6C,IAAzCL,EAAwC,EAAxCA,SAAUE,EAA8B,EAA9BA,WACNO,EAAY,YAAOJ,GAEzB,OAAQL,GACN,KAAKJ,EAASc,SACZD,EAAaE,OACb,MACF,KAAKf,EAASgB,OACZH,EAAaE,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAU7C,OAJIb,GACFO,EAAaO,UAGRP,EAYkBQ,CAAkBpB,EAAiBM,GAE1DG,EAASE,KACR,CAACL,IAsCJ,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,EAAeH,WAAaJ,EAASc,SAAW,GAAK,YAClFU,QA1CyB,WAC3BjB,EAAeH,WAAaJ,EAASc,UAIzCN,EAAkB,CAChBJ,SAAUJ,EAASc,SACnBR,YAAY,KAoCRmB,SAAUlB,EAAeH,WAAaJ,EAASc,SAJjD,iCASA,wBACES,KAAK,SACLD,UAAS,4BAAuBf,EAAeH,WAAaJ,EAASgB,OAAS,GAAK,YACnFQ,QAxCmB,WACrBjB,EAAeH,WAAaJ,EAASgB,QAIzCR,EAAkB,CAChBJ,SAAUJ,EAASgB,OACnBV,YAAY,KAkCRmB,SAAUlB,EAAeH,WAAaJ,EAASgB,OAJjD,4BASA,wBACEO,KAAK,SACLD,UAAS,4BAAuBf,EAAeD,WAAa,GAAK,YACjEkB,QAtCmB,WACzBhB,GAAkB,SAACkB,GAAD,mBAAC,eACdA,GADa,IAEhBpB,YAAaoB,EAAYpB,iBAgCvB,sBAQEC,EAAeH,WAAaJ,EAASK,MACpCE,EAAeD,aAChB,wBACEiB,KAAK,SACLD,UAAU,mBACVE,QAzCe,WACvBhB,EAAkB,CAChBJ,SAAUJ,EAASK,KACnBC,YAAY,KAmCR,sBAUJ,6BACGG,EAAMkB,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC5InBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.76a6af8b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nfunction getReorderedGoods(goods: string[],\n  { sortType, isReversed }: ReorderOptions) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reorderOptions, setReorderOptions] = useState<ReorderOptions>({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  const [goods, setGoods] = useState<string[]>([]);\n\n  useEffect(() => {\n    const reorderedGoods = getReorderedGoods(goodsFromServer, reorderOptions);\n\n    setGoods(reorderedGoods);\n  }, [reorderOptions]);\n\n  const handleSortAlphabetically = () => {\n    if (reorderOptions.sortType === SortType.ALPHABET) {\n      return;\n    }\n\n    setReorderOptions({\n      sortType: SortType.ALPHABET,\n      isReversed: false,\n    });\n  };\n\n  const handleSortByLength = () => {\n    if (reorderOptions.sortType === SortType.LENGTH) {\n      return;\n    }\n\n    setReorderOptions({\n      sortType: SortType.LENGTH,\n      isReversed: false,\n    });\n  };\n\n  const handleReverseOrder = () => {\n    setReorderOptions((prevOptions) => ({\n      ...prevOptions,\n      isReversed: !prevOptions.isReversed,\n    }));\n  };\n\n  const handleResetOrder = () => {\n    setReorderOptions({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${reorderOptions.sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={handleSortAlphabetically}\n          disabled={reorderOptions.sortType === SortType.ALPHABET}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${reorderOptions.sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={handleSortByLength}\n          disabled={reorderOptions.sortType === SortType.LENGTH}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${reorderOptions.isReversed ? '' : 'is-light'}`}\n          onClick={handleReverseOrder}\n        >\n          Reverse\n        </button>\n\n        {(reorderOptions.sortType !== SortType.NONE\n        || reorderOptions.isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={handleResetOrder}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}